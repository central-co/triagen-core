// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id          String    @id @default(cuid())
  name        String
  website     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  jobs        Job[]

  @@map("company")
}

model Job {
  id          String   @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  applications Application[]
  companyId   String
  company     Company @relation(fields: [companyId], references: [id])


  @@map("job")
}

model Candidate {
  id          String    @id @default(cuid())
  firstName   String
  lastName    String
  email       String    @unique
  phone       String?
  resume      String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  applications Application[]

  @@map("candidate")
}

model Application {
  id           String             @id @default(cuid())
  shortCode    String             @unique
  status       ApplicationStatus  @default(PENDING)
  startAt      DateTime           @default(now())
  endAt        DateTime?
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt

  jobId        String
  job          Job                @relation(fields: [jobId], references: [id])
  candidateId  String
  candidate    Candidate          @relation(fields: [candidateId], references: [id])

  @@map("application")
}

enum ApplicationStatus {
  PENDING
  INTERVIEWED
  REVIEWED
  CANCELLED
}
